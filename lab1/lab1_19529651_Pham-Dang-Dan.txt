Part 1. Overview of the get started guide
không có gì

Part 2. Containerize an application

lệnh
git clone https://github.com/docker/getting-started-app.git

kết quả
Cloning into 'getting-started-app'...
remote: Enumerating objects: 65, done.
remote: Counting objects: 100% (17/17), done.
remote: Compressing objects: 100% (12/12), done.
remote: Total 65 (delta 5), reused 5 (delta 5), pack-reused 48
Receiving objects: 100% (65/65), 1.76 MiB | 307.00 KiB/s, done.
Resolving deltas: 100% (10/10), done.

lệnh
cd ./getting-started-app


kết quả
(không có gì)

lệnh
type nul > Dockerfile

kết quả
(không có gì)

lệnh
docker build -t getting-started .

kết quả
[+] Building 17.2s (14/14) FINISHED
 => [internal] load build definition from Dockerfile                                                               0.1s
 => => transferring dockerfile: 188B                                                                               0.0s
 => [internal] load .dockerignore                                                                                  0.0s
 => => transferring context: 2B                                                                                    0.0s
 => resolve image config for docker.io/docker/dockerfile:1                                                         2.1s
 => [auth] docker/dockerfile:pull token for registry-1.docker.io                                                   0.0s
 => CACHED docker-image://docker.io/docker/dockerfile:1@sha256:ac85f380a63b13dfcefa89046420e1781752bab202122f8f50  0.0s
 => [internal] load build definition from Dockerfile                                                               0.0s
 => [internal] load metadata for docker.io/library/node:18-alpine                                                  0.0s
 => [internal] load .dockerignore                                                                                  0.0s
 => [1/4] FROM docker.io/library/node:18-alpine                                                                    0.0s
 => [internal] load build context                                                                                  0.8s
 => => transferring context: 6.47MB                                                                                0.7s
 => CACHED [2/4] WORKDIR /app                                                                                      0.0s
 => [3/4] COPY . .                                                                                                 0.1s
 => [4/4] RUN yarn install --production                                                                           13.0s
 => exporting to image                                                                                             0.8s
 => => exporting layers                                                                                            0.8s
 => => writing image sha256:0b72a07e6cfe5a70363181ac8f64f2e54fb5bfe82963c9cdf0e15c7bfec0b231                       0.0s
 => => naming to docker.io/library/getting-started                                                                 0.0s

Use 'docker scan' to run Snyk tests against images to find vulnerabilities and learn how to fix them

lệnh
docker run -dp 127.0.0.1:3000:3000 getting-started

kết quả
a7a2d629bcaca621ad8b3a8c2053bff9d2036e816328f92ab7622398dad322af

lệnh
docker ps

kết quả
CONTAINER ID   IMAGE             COMMAND                  CREATED          STATUS          PORTS                      NAMES
a7a2d629bcac   getting-started   "docker-entrypoint.s…"   15 seconds ago   Up 13 seconds   127.0.0.1:3000->3000/tcp   hopeful_williams


Part 3. Update the application

lệnh
docker build -t getting-started .

kết quả
[+] Building 14.0s (13/13) FINISHED
 => [internal] load build definition from Dockerfile                                                                                       0.0s
 => => transferring dockerfile: 32B                                                                                                        0.0s
 => [internal] load .dockerignore                                                                                                          0.0s
 => => transferring context: 2B                                                                                                            0.0s
 => resolve image config for docker.io/docker/dockerfile:1                                                                                 1.0s
 => CACHED docker-image://docker.io/docker/dockerfile:1@sha256:ac85f380a63b13dfcefa89046420e1781752bab202122f8f50032edf31be0021            0.0s
 => [internal] load build definition from Dockerfile                                                                                       0.0s
 => [internal] load metadata for docker.io/library/node:18-alpine                                                                          0.0s
 => [internal] load .dockerignore                                                                                                          0.0s
 => [1/4] FROM docker.io/library/node:18-alpine                                                                                            0.0s
 => [internal] load build context                                                                                                          0.0s
 => => transferring context: 10.49kB                                                                                                       0.0s
 => CACHED [2/4] WORKDIR /app                                                                                                              0.0s
 => [3/4] COPY . .                                                                                                                         0.1s
 => [4/4] RUN yarn install --production                                                                                                   11.8s
 => exporting to image                                                                                                                     0.7s
 => => exporting layers                                                                                                                    0.7s
 => => writing image sha256:b6dff841046c51639e33345dc4043325b3fe1dac3e3d1e625ec46ec4b2a9fc63                                               0.0s
 => => naming to docker.io/library/getting-started                                                                                         0.0s

Use 'docker scan' to run Snyk tests against images to find vulnerabilities and learn how to fix them

lệnh
docker run -dp 127.0.0.1:3000:3000 getting-started

kết quả
b3448d29067cc01ae565d0fee21a115e7e15b6ae50f70b4813d1db338cbfe9b1

lệnh
docker ps

kết quả
CONTAINER ID   IMAGE             COMMAND                  CREATED          STATUS          PORTS                      NAMES
b3448d29067c   getting-started   "docker-entrypoint.s…"   17 seconds ago   Up 16 seconds   127.0.0.1:3000->3000/tcp   sleepy_nightingale

lệnh
docker stop b3448d29067cc01ae565d0fee21a115e7e15b6ae50f70b4813d1db338cbfe9b1

kết quả
b3448d29067cc01ae565d0fee21a115e7e15b6ae50f70b4813d1db338cbfe9b1

lệnh
docker rm b3448d29067cc01ae565d0fee21a115e7e15b6ae50f70b4813d1db338cbfe9b1

kết quả
b3448d29067cc01ae565d0fee21a115e7e15b6ae50f70b4813d1db338cbfe9b1

lệnh
docker run -dp 127.0.0.1:3000:3000 getting-started

kết quả
de45673057ce5f01401059b4fa9396dfdeb1c1b68930bffab5f1fc177fe0502f


Part 4.Share the application

lệnh
docker push docker/getting-started

kết quả
Using default tag: latest
The push refers to repository [docker.io/docker/getting-started]
An image does not exist locally with the tag: docker/getting-started

lệnh
docker tag getting-started dangdan2807/nmdll_getting-started:v0.1

kết quả
(không hiển thị gì)

lệnh
docker push dangdan2807/nmdll_getting-started:v0.1

kết quả
The push refers to repository [docker.io/dangdan2807/nmdll_getting-started]
e2ce2e2abbd8: Pushed
d53372996021: Pushed
e978fb00787f: Layer already exists
498c77a984f9: Layer already exists
69b50a78845f: Layer already exists
ea2a97a3209c: Layer already exists
4693057ce236: Layer already exists
v0.1: digest: sha256:44078298ce5790e2f8a9f9a7a9953c6561c67dacdce8c786c1bc601dabb46ae6 size: 1788


Part 5. Persist the DB

lệnh
docker run -d ubuntu bash -c "shuf -i 1-10000 -n 1 -o /data.txt && tail -f /dev/null"

kết quả
f842fc4f0345fb8e05c2a9723a24c6124ef6dfb10410c4ef9b7160ce758d8192

lệnh
docker exec f842fc4f0345fb8e05c2a9723a24c6124ef6dfb10410c4ef9b7160ce758d8192 cat /data.txt

kết quả
7139

lệnh
docker run -it ubuntu ls /

kết quả
bin   dev  home  lib32  libx32  mnt  proc  run   srv  tmp  var
boot  etc  lib   lib64  media   opt  root  sbin  sys  usr

lệnh
docker volume create todo-db

kết quả
todo-db

lệnh
docker run -dp 127.0.0.1:3000:3000 --mount type=volume,src=todo-db,target=/etc/todos getting-started

kết quả
aec2df309541ae1ef42e2c81fe6acd1b7e25c3c921af4f7de5d5af4359aecc80

lệnh
docker volume inspect todo-db

kết quả
[
    {
        "CreatedAt": "2023-09-12T15:51:00Z",
        "Driver": "local",
        "Labels": {},
        "Mountpoint": "/var/lib/docker/volumes/todo-db/_data",
        "Name": "todo-db",
        "Options": {},
        "Scope": "local"
    }
]


Part 6. Use bind mounts

lệnh
docker run -it --mount "type=bind,src=$pwd,target=/src" ubuntu bash

kết quả
root@5f0e2ff990eb:/#

lệnh
pwd

kết quả
/

lệnh
ls

kết quả
bin  boot  dev  etc  home  lib  lib32  lib64  libx32  media  mnt  opt  proc  root  run  sbin  src  srv  sys  tmp  usr  var

lệnh
cd src

kết quả
root@5f0e2ff990eb:/src#

lệnh 
ls

kết quả
Dockerfile  README.md  package.json  spec  src  yarn.lock

lệnh
touch myfile.txt

kết quả
root@5f0e2ff990eb:/src#

lệnh
ls

kết quả
Dockerfile  README.md  myfile.txt  package.json  spec  src  yarn.lock

lệnh 
ls

kết quả
Dockerfile  README.md  package.json  spec  src  yarn.lock

lệnh
docker run -dp 127.0.0.1:3000:3000 `
    -w /app --mount "type=bind,src=$pwd,target=/app" `
    node:18-alpine `
    sh -c "yarn install && yarn run dev"

kết quả
983ac98d248a5ebad483b0741f98ad5e67910e599f8e1515aaa7d486c002480e

lệnh
docker logs 983ac98d248a5ebad483b0741f98ad5e67910e599f8e1515aaa7d486c002480e

kết quả
yarn install v1.22.19
[1/4] Resolving packages...
[2/4] Fetching packages...
[3/4] Linking dependencies...
[4/4] Building fresh packages...
Done in 25.45s.
yarn run v1.22.19
$ nodemon src/index.js
[nodemon] 2.0.20
[nodemon] to restart at any time, enter `rs`
[nodemon] watching path(s): *.*
[nodemon] watching extensions: js,mjs,json
[nodemon] starting `node src/index.js`
Using sqlite database at /etc/todos/todo.db
Listening on port 3000

lệnh
docker build -t getting-started .

kết quả
[+] Building 15.7s (15/15) FINISHED
 => [internal] load build definition from Dockerfile                                                                                       0.0s
 => => transferring dockerfile: 32B                                                                                                        0.0s
 => [internal] load .dockerignore                                                                                                          0.0s
 => => transferring context: 2B                                                                                                            0.0s
 => resolve image config for docker.io/docker/dockerfile:1                                                                                 2.1s
 => [auth] docker/dockerfile:pull token for registry-1.docker.io                                                                           0.0s
 => CACHED docker-image://docker.io/docker/dockerfile:1@sha256:ac85f380a63b13dfcefa89046420e1781752bab202122f8f50032edf31be0021            0.0s
 => [internal] load build definition from Dockerfile                                                                                       0.0s
 => [internal] load metadata for docker.io/library/node:18-alpine                                                                          1.4s
 => [auth] library/node:pull token for registry-1.docker.io                                                                                0.0s
 => [internal] load .dockerignore                                                                                                          0.0s
 => [1/4] FROM docker.io/library/node:18-alpine@sha256:3482a20c97e401b56ac50ba8920cc7b5b2022bfc6aa7d4e4c231755770cf892f                    0.0s
 => [internal] load build context                                                                                                          0.9s
 => => transferring context: 53.39MB                                                                                                       0.8s
 => CACHED [2/4] WORKDIR /app                                                                                                              0.0s
 => [3/4] COPY . .                                                                                                                         0.6s
 => [4/4] RUN yarn install --production                                                                                                    9.8s
 => exporting to image                                                                                                                     0.7s
 => => exporting layers                                                                                                                    0.7s
 => => writing image sha256:2f13c7633d4fdc8b95dfdbe68b276e8b97a24d30837ad8e8da0472eb94d6f8b9                                               0.0s
 => => naming to docker.io/library/getting-started                                                                                         0.0s

Use 'docker scan' to run Snyk tests against images to find vulnerabilities and learn how to fix them


Part 7. Multi container apps

lệnh: 
docker run -d \
    --network todo-app --network-alias mysql \
    -v todo-mysql-data:/var/lib/mysql \
    -e MYSQL_ROOT_PASSWORD=secret \
    -e MYSQL_DATABASE=todos \
    mysql:8.0

kết quả
Unable to find image 'mysql:8.0' locally
8.0: Pulling from library/mysql
b193354265ba: Pull complete
14a15c0bb358: Pull complete
02da291ad1e4: Pull complete
9a89a1d664ee: Pull complete
a24ae6513051: Pull complete
5110d0b8df84: Pull complete
71def905d921: Pull complete
c29c4f8eb3c1: Pull complete
769af171cdaa: Pull complete
c1a0ba6abbff: Pull complete
5e7e1ae11403: Pull complete
Digest: sha256:f0e71f077bb27fe17b1b9551f75d1b35ad4dfe3a33c82412acf19684790f3a30
Status: Downloaded newer image for mysql:8.0
0330e3b8c8bf33216f175ad4118062caf25322e44e1879bb8551124d01c8d2f2

lệnh 
docker exec -it 0330e3b8c8bf33216f175ad4118062caf25322e44e1879bb8551124d01c8d2f2 mysql -u root -p

kết quả
Enter password:
Server version: 8.0.34 MySQL Community Server - GPL

Copyright (c) 2000, 2023, Oracle and/or its affiliates.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

lệnh
SHOW DATABASES;

kết quả
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| performance_schema |
| sys                |
| todos              |
+--------------------+
5 rows in set (0.00 sec)

lệnh 
exit

kết quả
Bye

lệnh
docker run -it --network todo-app nicolaka/netshoot

kết quả
Unable to find image 'nicolaka/netshoot:latest' locally
latest: Pulling from nicolaka/netshoot
8a49fdb3b6a5: Pull complete
f08cc7654b42: Pull complete
bacdb080ad6d: Pull complete
df75a2676b1d: Pull complete
d30ac41fb6a9: Pull complete
3f3eebe79603: Pull complete
086410b5650d: Pull complete
4f4fb700ef54: Pull complete
5a7fe97d184f: Pull complete
a6d1b2d7a50e: Pull complete
599ae1c27c63: Pull complete
dd5e50b27eb9: Pull complete
2681a5bf3176: Pull complete
2517e0a2f862: Pull complete
7b5061a1528d: Pull complete
Digest: sha256:a7c92e1a2fb9287576a16e107166fee7f9925e15d2c1a683dbb1f4370ba9bfe8
Status: Downloaded newer image for nicolaka/netshoot:latest
                    dP            dP                           dP
                    88            88                           88
88d888b. .d8888b. d8888P .d8888b. 88d888b. .d8888b. .d8888b. d8888P
88'  `88 88ooood8   88   Y8ooooo. 88'  `88 88'  `88 88'  `88   88
88    88 88.  ...   88         88 88    88 88.  .88 88.  .88   88
dP    dP `88888P'   dP   `88888P' dP    dP `88888P' `88888P'   dP

Welcome to Netshoot! (github.com/nicolaka/netshoot)
Version: 0.11

lệnh
dig mysql

kết quả
; <<>> DiG 9.18.13 <<>> mysql
;; global options: +cmd
;; Got answer:
;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 3625
;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 0

;; QUESTION SECTION:
;mysql.                         IN      A

;; ANSWER SECTION:
mysql.                  600     IN      A       172.18.0.2

;; Query time: 0 msec
;; SERVER: 127.0.0.11#53(127.0.0.11) (UDP)
;; WHEN: Tue Sep 12 07:21:11 UTC 2023
;; MSG SIZE  rcvd: 44

lệnh
docker run -dp 127.0.0.1:3000:3000 `
  -w /app -v "$(pwd):/app" `
  --network todo-app `
  -e MYSQL_HOST=mysql `
  -e MYSQL_USER=root `
  -e MYSQL_PASSWORD=secret `
  -e MYSQL_DB=todos `
  node:18-alpine `
  sh -c "yarn install && yarn run dev"
kết quả
f63c90a5c9fcd0e11c96dd6bc801b398ea7be52d07087c91ffc5ec9417eedc22

lệnh
docker logs -f f63c90a5c9fcd0e11c96dd6bc801b398ea7be52d07087c91ffc5ec9417eedc22

kết quả
yarn install v1.22.19
[1/4] Resolving packages...
success Already up-to-date.
Done in 0.21s.
yarn run v1.22.19
$ nodemon src/index.js
[nodemon] 2.0.20
[nodemon] to restart at any time, enter `rs`
[nodemon] watching path(s): *.*
[nodemon] watching extensions: js,mjs,json
[nodemon] starting `node src/index.js`
Waiting for mysql:3306.
Connected!
Connected to mysql db at host mysql
Listening on port 3000

lệnh
docker exec -it 0330e3b8c8bf33216f175ad4118062caf25322e44e1879bb8551124d01c8d2f2 mysql -p todos

kết quả
Enter password:
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A

Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 14
Server version: 8.0.34 MySQL Community Server - GPL

Copyright (c) 2000, 2023, Oracle and/or its affiliates.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

mysql>

lệnh
mysql> select * from todo_items;

kết quả
+--------------------------------------+--------+-----------+
| id                                   | name   | completed |
+--------------------------------------+--------+-----------+
| ded17e7b-2375-4094-b313-5b719e9a8a58 | hello  |         0 |
| 4a1347b6-6c39-4609-a6ff-56667f6fb294 | item 1 |         0 |
| e07a43d9-d1e1-4efb-9706-e9919dccc7e3 | test 2 |         0 |
+--------------------------------------+--------+-----------+
3 rows in set (0.00 sec)


Part 8. Use Docker Compose

lệnh
docker compose up -d

kết quả
[+] Running 3/3
 - Network getting-started-app_default    Created                                                                  0.6s
 - Container getting-started-app-mysql-1  Started                                                                  1.3s
 - Container getting-started-app-app-1    Started                                                                  1.6s

lệnh
docker compose logs -f

kết quả
getting-started-app-mysql-1  | 2023-09-12 07:34:17+00:00 [Note] [Entrypoint]: Entrypoint script for MySQL Server 8.0.34-1.el8 started.
getting-started-app-mysql-1  | 2023-09-12 07:34:17+00:00 [Note] [Entrypoint]: Switching to dedicated user 'mysql'
getting-started-app-mysql-1  | 2023-09-12 07:34:17+00:00 [Note] [Entrypoint]: Entrypoint script for MySQL Server 8.0.34-1.el8 started.
getting-started-app-mysql-1  | '/var/lib/mysql/mysql.sock' -> '/var/run/mysqld/mysqld.sock'
getting-started-app-mysql-1  | 2023-09-12T07:34:18.263307Z 0 [Warning] [MY-011068] [Server] The syntax '--skip-host-cache' is deprecated and will be removed in a future release. Please use SET GLOBAL host_cache_size=0 instead.
getting-started-app-mysql-1  | 2023-09-12T07:34:18.264291Z 0 [System] [MY-010116] [Server] /usr/sbin/mysqld (mysqld 8.0.34) starting as process 1
getting-started-app-app-1    | yarn install v1.22.19
getting-started-app-mysql-1  | 2023-09-12T07:34:18.270196Z 1 [System] [MY-013576] [InnoDB] InnoDB initialization has started.
getting-started-app-mysql-1  | 2023-09-12T07:34:18.381975Z 1 [System] [MY-013577] [InnoDB] InnoDB initialization has ended.
getting-started-app-mysql-1  | 2023-09-12T07:34:18.519186Z 0 [Warning] [MY-010068] [Server] CA certificate ca.pem is self signed.
getting-started-app-mysql-1  | 2023-09-12T07:34:18.519223Z 0 [System] [MY-013602] [Server] Channel mysql_main configured to support TLS. Encrypted connections are now supported for this channel.
getting-started-app-app-1    | [1/4] Resolving packages...
getting-started-app-app-1    | success Already up-to-date.
getting-started-app-app-1    | Done in 0.20s.
getting-started-app-app-1    | yarn run v1.22.19
getting-started-app-app-1    | $ nodemon src/index.js
getting-started-app-app-1    | [nodemon] 2.0.20
getting-started-app-app-1    | [nodemon] to restart at any time, enter `rs`
getting-started-app-app-1    | [nodemon] watching path(s): *.*
getting-started-app-app-1    | [nodemon] watching extensions: js,mjs,json
getting-started-app-app-1    | [nodemon] starting `node src/index.js`
getting-started-app-app-1    | Waiting for mysql:3306.
getting-started-app-app-1    | Connected!
getting-started-app-app-1    | Connected to mysql db at host mysql
getting-started-app-app-1    | Listening on port 3000
getting-started-app-mysql-1  | 2023-09-12T07:34:18.522136Z 0 [Warning] [MY-011810] [Server] Insecure configuration for --pid-file: Location '/var/run/mysqld' in the path is accessible to all OS users. Consider choosing a different directory.
getting-started-app-mysql-1  | 2023-09-12T07:34:18.534065Z 0 [System] [MY-011323] [Server] X Plugin ready for connections. Bind-address: '::' port: 33060, socket: /var/run/mysqld/mysqlx.sock
getting-started-app-mysql-1  | 2023-09-12T07:34:18.534116Z 0 [System] [MY-010931] [Server] /usr/sbin/mysqld: ready for connections. Version: '8.0.34'  socket: '/var/run/mysqld/mysqld.sock'  port: 3306  MySQL Community Server - GPL.


Part 9. Image-building best practices

lệnh
docker image history dangdan2807/nmdll_getting-started:v1.1

kết quả
IMAGE          CREATED          CREATED BY                                      SIZE      COMMENT
bba3b0d3dea5   40 minutes ago   EXPOSE map[3000/tcp:{}]                         0B        buildkit.dockerfile.v0
<missing>      40 minutes ago   CMD ["node" "src/index.js"]                     0B        buildkit.dockerfile.v0
<missing>      40 minutes ago   RUN /bin/sh -c yarn install --production # b…   83.1MB    buildkit.dockerfile.v0
<missing>      42 minutes ago   COPY . . # buildkit                             59.3MB    buildkit.dockerfile.v0
<missing>      2 hours ago      WORKDIR /app                                    0B        buildkit.dockerfile.v0
<missing>      4 weeks ago      /bin/sh -c #(nop)  CMD ["node"]                 0B
<missing>      4 weeks ago      /bin/sh -c #(nop)  ENTRYPOINT ["docker-entry…   0B
<missing>      4 weeks ago      /bin/sh -c #(nop) COPY file:4d192565a7220e13…   388B
<missing>      4 weeks ago      /bin/sh -c apk add --no-cache --virtual .bui…   7.77MB
<missing>      4 weeks ago      /bin/sh -c #(nop)  ENV YARN_VERSION=1.22.19     0B
<missing>      4 weeks ago      /bin/sh -c addgroup -g 1000 node     && addu…   161MB
<missing>      4 weeks ago      /bin/sh -c #(nop)  ENV NODE_VERSION=18.17.1     0B
<missing>      5 weeks ago      /bin/sh -c #(nop)  CMD ["/bin/sh"]              0B
<missing>      5 weeks ago      /bin/sh -c #(nop) ADD file:32ff5e7a78b890996…   7.34MB

lệnh
docker image history --no-trunc dangdan2807/nmdll_getting-started:v1.1

kết quả
IMAGE                                                                     CREATED          CREATED BY





















                                                                                   SIZE      COMMENT
sha256:bba3b0d3dea537c82f396981f2848948f3fc59ede0f38195e90d27638b483287   41 minutes ago   EXPOSE map[3000/tcp:{}]




















                                                                                   0B        buildkit.dockerfile.v0
<missing>                                                                 41 minutes ago   CMD ["node" "src/index.js"]




















                                                                                   0B        buildkit.dockerfile.v0
<missing>                                                                 41 minutes ago   RUN /bin/sh -c yarn install --production # buildkit




















                                                                                   83.1MB    buildkit.dockerfile.v0
<missing>                                                                 43 minutes ago   COPY . . # buildkit




















                                                                                   59.3MB    buildkit.dockerfile.v0
<missing>                                                                 2 hours ago      WORKDIR /app





















                                                                                   0B        buildkit.dockerfile.v0
<missing>                                                                 4 weeks ago      /bin/sh -c #(nop)  CMD ["node"]




















                                                                                   0B
<missing>                                                                 4 weeks ago      /bin/sh -c #(nop)  ENTRYPOINT ["docker-entrypoint.sh"]




















                                                                                   0B
<missing>                                                                 4 weeks ago      /bin/sh -c #(nop) COPY file:4d192565a7220e135cab6c77fbc1c73211b69f3d9fb37e62857b2c6eb9363d51 in /usr/local/bin/




















                                                                                   388B
<missing>                                                                 4 weeks ago      /bin/sh -c apk add --no-cache --virtual .build-deps-yarn curl gnupg tar   && export GNUPGHOME="$(mktemp -d)"   && for key in     6A010C5166006599AA17F08146C2130DFD2497F5   ; do     gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys "$key" ||     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys "$key" ;   done   && curl -fsSLO --compressed "https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz"   && curl -fsSLO --compressed "https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc"   && gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz   && gpgconf --kill all   && rm -rf "$GNUPGHOME"   && mkdir -p /opt   && tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/   && ln -s /opt/yarn-v$YARN_VERSION/bin/yarn /usr/local/bin/yarn   && ln -s /opt/yarn-v$YARN_VERSION/bin/yarnpkg /usr/local/bin/yarnpkg   && rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz   && apk del .build-deps-yarn   && yarn --version












                                                                                   7.77MB
<missing>                                                                 4 weeks ago      /bin/sh -c #(nop)  ENV YARN_VERSION=1.22.19




















                                                                                   0B
<missing>                                                                 4 weeks ago      /bin/sh -c addgroup -g 1000 node     && adduser -u 1000 -G node -s /bin/sh -D node     && apk add --no-cache         libstdc++     && apk add --no-cache --virtual .build-deps         curl     && ARCH= && alpineArch="$(apk --print-arch)"       && case "${alpineArch##*-}" in         x86_64)           ARCH='x64'           CHECKSUM="a67f0b51f0951382709abb5613ee577b5af648752ed363ae32411214041f4e73"           ;;         *) ;;       esac   && if [ -n "${CHECKSUM}" ]; then     set -eu;     curl -fsSLO --compressed "https://unofficial-builds.nodejs.org/download/release/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz";     echo "$CHECKSUM  node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz" | sha256sum -c -       && tar -xJf "node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz" -C /usr/local --strip-components=1 --no-same-owner       && ln -s /usr/local/bin/node /usr/local/bin/nodejs;   else     echo "Building from source"     && apk add --no-cache --virtual .build-deps-full         binutils-gold         g++         gcc         gnupg         libgcc         linux-headers         make         python3     && export GNUPGHOME="$(mktemp -d)"     && for key in       4ED778F539E3634C779C87C6D7062848A1AB005C       141F07595B7B3FFE74309A937405533BE57C7D57       74F12602B6F1C4E913FAA37AD3A89613643B6201       DD792F5973C6DE52C432CBDAC77ABFA00DDBF2B7       61FC681DFB92A079F1685E77973F295594EC4689       8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600       C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8       890C08DB8579162FEE0DF9DB8BEAB4DFCF555EF4       C82FA3AE1CBEDC6BE46B9360C43CEC45C17AB93C       108F52B48DB57BB0CC439B2997B01419BD92F80A     ; do       gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys "$key" ||       gpg --batch --keyserver keyserver.ubuntu.com --recv-keys "$key" ;     done     && curl -fsSLO --compressed "https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION.tar.xz"     && curl -fsSLO --compressed "https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc"     && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc     && gpgconf --kill all     && rm -rf "$GNUPGHOME"     && grep " node-v$NODE_VERSION.tar.xz\$" SHASUMS256.txt | sha256sum -c -     && tar -xf "node-v$NODE_VERSION.tar.xz"     && cd "node-v$NODE_VERSION"     && ./configure     && make -j$(getconf _NPROCESSORS_ONLN) V=     && make install     && apk del .build-deps-full     && cd ..     && rm -Rf "node-v$NODE_VERSION"     && rm "node-v$NODE_VERSION.tar.xz" SHASUMS256.txt.asc SHASUMS256.txt;   fi   && rm -f "node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz"   && apk del .build-deps   && node --version   && npm --version   161MB
<missing>                                                                 4 weeks ago      /bin/sh -c #(nop)  ENV NODE_VERSION=18.17.1




















                                                                                   0B
<missing>                                                                 5 weeks ago      /bin/sh -c #(nop)  CMD ["/bin/sh"]




















                                                                                   0B
<missing>                                                                 5 weeks ago      /bin/sh -c #(nop) ADD file:32ff5e7a78b890996ee4681cc0a26185d3e9acdb4eb1e2aaccb2411f922fed6b in /



















                                                                                   7.34MB

lệnh
docker build -t dangdan2807/nmdll_getting-started:v1.1 .

kết quả
(không hiển thị gì)